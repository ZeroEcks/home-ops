---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sonarr
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      sonarr:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: sonarr-secret
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.11.2697@sha256:e56594c733cf7b2943cbe42e3956d87d4910884c02a1d4eb34cb64583b4dde51
            env:
              TZ: ${TIMEZONE}
              SONARR__INSTANCE_NAME: Sonarr
              SONARR__PORT: &port 80
              SONARR__LOG_LEVEL: info
              SONARR__AUTHENTICATION_METHOD: External
              SONARR__API_KEY: ${SECRET_SONARR_KEY}
            envFrom: *envFrom
            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 2000Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 1
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [10000]
    service:
      app:
        controller: sonarr
        ports:
          http:
            port: *port
    ingress:
      internal:
        enabled: true
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        storageClass: freenas-iscsi-csi
        size: 1Gi

      media:
        enabled: true
        type: nfs
        server: ${SECRET_NFS_SERVER} # poke
        path: ${SECRET_NFS_MEDIA}
