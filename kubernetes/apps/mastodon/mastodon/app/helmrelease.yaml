---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: mastodon
  namespace: mastodon
spec:
  interval: 5m
  chart:
    spec:
      chart: mastodon
      version: 3.0.5
      sourceRef:
        kind: HelmRepository
        name: mastodon
      interval: 5m
  values:
    initContainers:
      init-db:
        image:
          repository: ghcr.io/onedr0p/postgres-init
          tag: 16
        envFrom: &envFrom
          - secretRef:
              name: mastodon-secret
    image:
      registry: docker.io
      repository: ghcr.io/glitch-soc/mastodon
      tag: nightly.2024-02-17-security
      pullPolicy: IfNotPresent
    adminUser: ZeroEcks
    adminEmail: ${SECRET_ACME_EMAIL}
    existingSecret: mastodon-secret
    useSecureWebSocket: true
    localDomain: ${SECRET_SOCIAL_DOMAIN}
    tootctlMediaManagement:
      enabled: true
      removeAttachments: true
      removeAttachmentsDays: 30
      removeCustomEmoji: true
      removePreviewCards: true
      removePreviewCardsDays: 30
      removeAvatars: false
      removeAvatarsDays: 30
      removeHeaders: false
      removeHeadersDays: 30
      removeOrphans: true
      includeFollows: false
      cronSchedule: '14 3 * * *'
      failedJobsHistoryLimit: 3
      successfulJobsHistoryLimit: 3
      concurrencyPolicy: Allow
      smtp:
        from_address: "mastodon@${SECRET_SOCIAL_DOMAIN}"
        domain: "${SECRET_SOCIAL_DOMAIN}"
        reply_to: "mastodon@${SECRET_SOCIAL_DOMAIN}"
        existingSecret: "mastodon-secret"
        existingSecretLoginKey: "SMTP_USER"
        existingSecretPasswordKey: "SMTP_PASS"
        existingSecretServerKey: "SMTP_SERVER"
      initJob:
        createAdmin: false
      postgresql:
        enabled: true
      externalDatabase:
        host: "postgres16-rw.database.svc.cluster.local"
        port: 5432
        user: "mastodon"
        database: "mastodon"
        existingSecret: "mastodon-secret"
        existingSecretPasswordKey: "DATABASE_PASSWORD"
      redis:
        enabled: true
      externalRedis:
        host: "redis.database.svc.cluster.local"
        port: 6379
      minio:
        enabled: false
      externalS3:
        host: "syd1.digitaloceanspaces.com"
        protocol: "https"
        bucket: "cuties-cloud-infra-media"
        existingSecret: "mastodon-secret"
        existingSecretAccessKeyIDKey: "S3_ACCESS_KEY"
        existingSecretKeySecretKey: "S3_SECRET_ACCESS_KEY"
      apache:
        enabled: true
        ingress:
          enabled: true
          className: external-social
          annotations:
            external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          hosts:
            - host: &host "${SECRET_SOCIAL_DOMAIN}"
              paths:
                - path: /
                  service:
                    name: main
                    port: http
          tls:
            - hosts:
                - *host
