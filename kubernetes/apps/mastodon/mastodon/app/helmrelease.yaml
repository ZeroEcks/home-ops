---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: mastodon
  namespace: mastodon
spec:
  interval: 15m
  chart:
    spec:
      chart: mastodon
      version: 4.1.1
      sourceRef:
        kind: HelmRepository
        name: wrmilling-charts
        namespace: flux-system
  values:
    image:
      repository: ghcr.io/glitch-soc/mastodon
      tag: nightly.2024-02-17-security
      pullPolicy: IfNotPresent

    mastodon:
      authorizedFetch: true
      deepl:
        enabled: true
        plan: free
        apiKeySecretRef:
          name: mastodon-secret
          key: deepl-api-key
      createAdmin:
        enabled: false
        username: "ZeroEcks"
        email: "${SECRET_ACME_EMAIL}"
      local_domain: "${SECRET_SOCIAL_DOMAIN}"
      web_domain: "${SECRET_SOCIAL_DOMAIN}"
      singleUserMode: false
      extraEnvVars:
        MAX_TOOT_CHARS: 2048
      s3:
        enabled: true
        existingSecret: "mastodon-secret"
        bucket: "cuties-cloud-infra-media"
        endpoint: "https://syd1.digitaloceanspaces.com"
        hostname: "syd1.digitaloceanspaces.com"
        alias_host: "media.${SECRET_SOCIAL_DOMAIN}"
      secrets:
        existingSecret: "mastodon-secret"
      sidekiq:
        workers:
          - name: all-queues
            concurrency: 25
            replicas: 1
            resources: {}
            affinity: {}
            queues:
              - default,8
              - push,6
              - ingress,4
              - mailers,2
              - pull
              - scheduler # Make sure the scheduler queue only exists once and with a worker that has 1 replica.
          - name: pull-ingress
            concurrency: 50
            replicas: 1
            resources: {}
            affinity: {}
            queues:
              - pull
              - ingress
      smtp:
        existingSecret: "mastodon-secret"
        domain: "${SECRET_SOCIAL_DOMAIN}"
        from_address: "mastodon@${SECRET_SOCIAL_DOMAIN}"
        server: "smtp.zeptomail.com.au"
        port: 587
      streaming:
        image:
          repository: ghcr.io/glitch-soc/mastodon-streaming
          tag: nightly.2024-02-17-security
        port: 4000
      web:
        port: 3000

    ingress:
      enabled: true
      ingressClassName: external
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-social-production
        nginx.ingress.kubernetes.io/proxy-body-size: 40m
        nginx.org/client-max-body-size: 40m
        nginx.ingress.kubernetes.io/denylist-source-range: 2a01:4f8:140:2113::2
        external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
      hosts:
        - host: &host "${SECRET_SOCIAL_DOMAIN}"
          paths:
            - path: /
              service:
                name: main
                port: http
      tls:
        - hosts:
            - *host

    elasticsearch:
      enabled: true
      master:
        replicaCount: 1
      data:
        replicaCount: 1
      coordinating:
        replicaCount: 1
      ingest:
        replicaCount: 1
      image:
        tag: 7.17.9

    postgresql:
      enabled: false
      postgresqlHostname: postgres16-rw.database.svc.cluster.local
      postgresqlPort: 5432
      auth:
        database: mastodon
        username: mastodon
        existingSecret: mastodon-postgresql-secret

    redis:
      enabled: false
      hostname: "redis.database.svc.cluster.local"
      auth:
        existingSecret: "mastodon-redis-secret"
